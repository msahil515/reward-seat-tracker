import smtplib
import os
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime

def send_results_email(results_text, recipient_email):
    """Send extracted flight points via email"""
    
    # Email configuration (using Gmail SMTP)
    smtp_server = "smtp.gmail.com"
    smtp_port = 587
    sender_email = os.getenv("SENDER_EMAIL")  # Set in environment
    sender_password = os.getenv("SENDER_PASSWORD")  # App password for Gmail
    
    if not sender_email or not sender_password:
        print("Error: Email credentials not found in environment variables")
        print("Set SENDER_EMAIL and SENDER_PASSWORD environment variables")
        return False
    
    # Create message
    message = MIMEMultipart()
    message["From"] = sender_email
    message["To"] = recipient_email
    message["Subject"] = f"Virgin Atlantic Reward Seats - {datetime.now().strftime('%Y-%m-%d')}"
    
    # Email body
    body = f"""
Virgin Atlantic Reward Seat Availability

Route: London Heathrow (LHR) â†’ Bengaluru (BLR)
Class: Upper Class
Search Date: {datetime.now().strftime('%Y-%m-%d %H:%M')}

Results:
{results_text}

Generated by Reward Seat Tracker
    """
    
    message.attach(MIMEText(body, "plain"))
    
    try:
        # Connect to server and send email
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()  # Enable encryption
        server.login(sender_email, sender_password)
        
        text = message.as_string()
        server.sendmail(sender_email, recipient_email, text)
        server.quit()
        
        print(f"Email sent successfully to {recipient_email}")
        return True
        
    except Exception as e:
        print(f"Error sending email: {e}")
        return False

if __name__ == "__main__":
    # Read extracted results
    try:
        with open("extracted_points.txt", "r") as f:
            results = f.read().strip()
        
        # Replace with your email
        recipient = input("Enter recipient email: ")
        send_results_email(results, recipient)
        
    except FileNotFoundError:
        print("No results file found. Run extract_points.py first.")